{"ast":null,"code":"import _slicedToArray from \"/Users/elijahchen/blockchain-developer-bootcamp/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elijahchen/blockchain-developer-bootcamp/blockchain-developer-bootcamp-final-project/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport CarSharingContract from \"./contracts/CarSharing.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nconst Web3 = require('web3');\n\nconst web3 = new Web3(window.web3.currentProvider);\n\nconst contractABI = require(\"./contracts/CarSharing.json\");\n\nconst contractAddress = \"0xe1850F5244bD1F9dF72b3f7a8411aFb79de1170F\";\nconst contract = new web3.eth.Contract(contractABI.abi, contractAddress);\n\nconst App = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1]; //default message\n\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        walletAddress = _useState4[0],\n        setWallet = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        status = _useState6[0],\n        setStatus = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        regStatus = _useState8[0],\n        setRegStatus = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        reserveStatus = _useState10[0],\n        setReserveStatus = _useState10[1];\n\n  const _useState11 = useState(\"User Registered 🔴\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        registrationStatus = _useState12[0],\n        setRegistrationStatus = _useState12[1];\n\n  const _useState13 = useState(\"Car Reserved 🔴\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        rentStatus = _useState14[0],\n        setRentStatus = _useState14[1];\n\n  const _useState15 = useState(\"0\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        userRegistered = _useState16[0],\n        setUserRegistered = _useState16[1];\n\n  const _useState17 = useState(\"0\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        userRented = _useState18[0],\n        setUserRented = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        userName = _useState20[0],\n        setUserName = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        license = _useState22[0],\n        setLicense = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        plateNo = _useState24[0],\n        setPlateNo = _useState24[1];\n\n  useEffect(async () => {\n    getCurrentWalletConnected().then(response => {\n      getUserStatus(response.address);\n      setWallet(response.address);\n      setStatus(response.status);\n    });\n    addWalletListener();\n    addEventListener();\n  }, []);\n\n  function addEventListener() {\n    contract.events.UserRegistered({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else {\n        setRegistrationStatus(\"User Registered 🟢\");\n        setUserRegistered(\"1\");\n      }\n    });\n    contract.events.CarReserved({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else {\n        setRentStatus(\"Car Reserved 🟢\");\n        setUserRented(\"1\");\n      }\n    });\n    contract.events.CarReleased({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else {\n        setRentStatus(\"Car Reserved 🔴\");\n      }\n    });\n  }\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \", \"\\uD83E\\uDD8A\", \" \", React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://metamask.io/download.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"You must install Metamask, a virtual Ethereum wallet, in your browser.\")));\n    }\n  }\n\n  const rentCar = async () => {\n    if (walletAddress != \"\") {\n      if (userRented == \"0\") {\n        await contract.methods.rentCar(10, plateNo).send({\n          from: walletAddress\n        });\n      } else {\n        setReserveStatus(\"You have already reserved a car!\");\n      }\n    }\n  };\n\n  const unrentCar = async () => {\n    if (walletAddress != \"\") {\n      if (userRented == \"1\") {\n        await contract.methods.unrentCar(plateNo).send({\n          from: walletAddress\n        });\n      } else {\n        setReserveStatus(\"You do not have a car reserved!\");\n      }\n    }\n  };\n\n  const registerUser = async () => {\n    if (walletAddress != \"\") {\n      if (userRegistered == \"0\") {\n        await contract.methods.registerDriver(userName, license).send({\n          from: walletAddress\n        });\n      } else {\n        setRegStatus(\"You are already registered!\");\n      }\n    }\n  };\n\n  const getUserStatus = async address => {\n    let response = await contract.methods.getRegistrationStatus(address).call();\n\n    if (response) {\n      setRegistrationStatus(\"User Registered 🟢\");\n      setUserRegistered(\"1\");\n    } else {\n      setRegistrationStatus(\"User Registered 🔴\");\n    }\n\n    response = await contract.methods.getRentStatus(address).call();\n\n    if (response) {\n      setRentStatus(\"Car Reserved 🟢\");\n    } else {\n      setRentStatus(\"Car Reserved 🔴\");\n    }\n  };\n\n  const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"👆🏽 Enter any Teslo car plate no. above to reserve!\"\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"🦊 Connect to Metamask using the top right button.\"\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \" \", \"\\uD83E\\uDD8A\", \" \", React.createElement(\"a\", {\n          target: \"_blank\",\n          href: \"https://metamask.io/download.html\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"You must install Metamask, a virtual Ethereum wallet, in your browser.\")))\n      };\n    }\n  };\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const obj = {\n          status: \"👆🏽 Enter any Teslo car plate no. above to reserve!\",\n          regStatus: \"👆🏽 Register first to start car sharing!\",\n          address: addressArray[0]\n        };\n        setStatus(obj.status);\n        setRegStatus(obj.regStatus);\n        setWallet(obj.address);\n        return obj;\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \" \", \"\\uD83E\\uDD8A\", \" \", React.createElement(\"a\", {\n          target: \"_blank\",\n          href: \"https://metamask.io/download.html\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"You must install Metamask, a virtual Ethereum wallet, in your browser.\")))\n      };\n    }\n  };\n\n  const connectWalletPressed = async () => {\n    await connectWallet().then(response => {\n      getUserStatus(response.address);\n    }, error => {\n      /**\n       * Handle error here\n       */\n    });\n    ;\n  };\n\n  return React.createElement(\"div\", {\n    id: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"walletButton\",\n    onClick: connectWalletPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Connect Wallet\")), React.createElement(\"h1\", {\n    style: {\n      paddingTop: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Teslo Car Sharing Service\"), React.createElement(\"p\", {\n    id: \"registrationStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, registrationStatus), React.createElement(\"p\", {\n    id: \"rentStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, rentStatus), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, message), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      paddingTop: \"18px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"User Registration\"), React.createElement(\"h4\", {\n    style: {\n      paddingTop: \"18px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"e.g. John Wick\",\n    onChange: e => setUserName(e.target.value),\n    value: userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    style: {\n      paddingTop: \"18px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"License:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"e.g. ID12345\",\n    onChange: e => setLicense(e.target.value),\n    value: license,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, regStatus)), React.createElement(\"button\", {\n    id: \"publish\",\n    style: {\n      float: \"right\"\n    },\n    onClick: registerUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      paddingTop: \"18px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Car Reservation\"), React.createElement(\"h4\", {\n    style: {\n      paddingTop: \"18px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Plate No.:\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"e.g. SJW1011E\",\n    onChange: e => setPlateNo(e.target.value),\n    value: plateNo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, reserveStatus)), React.createElement(\"button\", {\n    id: \"publish\",\n    style: {\n      float: \"right\"\n    },\n    onClick: rentCar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Reserve\"), React.createElement(\"button\", {\n    id: \"publish\",\n    style: {\n      float: \"right\"\n    },\n    onClick: unrentCar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Release\"), React.createElement(\"p\", {\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, status));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/elijahchen/blockchain-developer-bootcamp/blockchain-developer-bootcamp-final-project/client/src/App.js"],"names":["React","Component","useEffect","useState","CarSharingContract","getWeb3","Web3","require","web3","window","currentProvider","contractABI","contractAddress","contract","eth","Contract","abi","App","message","setMessage","walletAddress","setWallet","status","setStatus","regStatus","setRegStatus","reserveStatus","setReserveStatus","registrationStatus","setRegistrationStatus","rentStatus","setRentStatus","userRegistered","setUserRegistered","userRented","setUserRented","userName","setUserName","license","setLicense","plateNo","setPlateNo","getCurrentWalletConnected","then","response","getUserStatus","address","addWalletListener","addEventListener","events","UserRegistered","error","data","CarReserved","CarReleased","ethereum","on","accounts","length","rentCar","methods","send","from","unrentCar","registerUser","registerDriver","getRegistrationStatus","call","getRentStatus","addressArray","request","method","err","connectWallet","obj","connectWalletPressed","String","substring","paddingTop","e","target","value","float"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport CarSharingContract from \"./contracts/CarSharing.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nconst Web3 = require('web3')\nconst web3 = new Web3(window.web3.currentProvider);\nconst contractABI = require(\"./contracts/CarSharing.json\");\nconst contractAddress = \"0xe1850F5244bD1F9dF72b3f7a8411aFb79de1170F\";\nconst contract = new web3.eth.Contract(\ncontractABI.abi, contractAddress\n);\n\n\nconst App = () => {\n\n  const [message, setMessage] = useState(\"\"); //default message\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [regStatus, setRegStatus] = useState(\"\");\n  const [reserveStatus, setReserveStatus] = useState(\"\");\n  const [registrationStatus, setRegistrationStatus] = useState(\"User Registered 🔴\");\n  const [rentStatus, setRentStatus] = useState(\"Car Reserved 🔴\");\n  const [userRegistered, setUserRegistered] = useState(\"0\");\n  const [userRented, setUserRented] = useState(\"0\");\n  const [userName, setUserName] = useState(\"\");\n  const [license, setLicense] = useState(\"\");\n  const [plateNo, setPlateNo] = useState(\"\");\n  \n  useEffect(async () => {\n    getCurrentWalletConnected().then((response) => { \n    \n      getUserStatus(response.address); \n      setWallet(response.address);\n      setStatus(response.status);});\n      \n      addWalletListener();\n      addEventListener();\n  }, []);\n\n  function addEventListener() {\n    contract.events.UserRegistered({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else{\n        setRegistrationStatus(\"User Registered 🟢\");\n        setUserRegistered(\"1\");\n      }\n    });\n\n    contract.events.CarReserved({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else{\n        setRentStatus(\"Car Reserved 🟢\");\n        setUserRented(\"1\");\n      }\n    });\n\n    contract.events.CarReleased({}, (error, data) => {\n      if (error) {\n        setMessage(error.message);\n      } else{\n        setRentStatus(\"Car Reserved 🔴\");\n      }\n    });\n  }\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          🦊{\" \"}\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n const rentCar = async () => {\n  if(walletAddress != \"\"){\n    if(userRented == \"0\"){\n      await contract.methods.rentCar(10, plateNo).send({ from: walletAddress });\n    }else{\n      setReserveStatus(\"You have already reserved a car!\");\n    }\n  }\n};\n\nconst unrentCar = async () => {\n  if(walletAddress != \"\"){\n    if(userRented == \"1\"){\n      await contract.methods.unrentCar(plateNo).send({ from: walletAddress });\n    }else{\n      setReserveStatus(\"You do not have a car reserved!\");\n    }\n  }\n };\n\nconst registerUser = async () => {\n  if(walletAddress != \"\"){\n    if(userRegistered == \"0\"){\n      await contract.methods.registerDriver(userName, license).send({ from: walletAddress });\n    }else{\n      setRegStatus(\"You are already registered!\");\n    }\n}\n};\n\nconst getUserStatus = async (address) => {\n  let response = await contract.methods.getRegistrationStatus(address).call();\n\n  if(response){\n    setRegistrationStatus(\"User Registered 🟢\");\n    setUserRegistered(\"1\");\n  }else{\n    setRegistrationStatus(\"User Registered 🔴\");\n  }\n\n  response = await contract.methods.getRentStatus(address).call();\n  if(response){\n    setRentStatus(\"Car Reserved 🟢\");\n  }else{\n    setRentStatus(\"Car Reserved 🔴\");\n  }\n  \n};\n\nconst getCurrentWalletConnected = async () => {\n \n  if (window.ethereum) {\n\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n      \n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"👆🏽 Enter any Teslo car plate no. above to reserve!\",\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"🦊 Connect to Metamask using the top right button.\",\n        };\n      }\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};\n\nconst connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \"👆🏽 Enter any Teslo car plate no. above to reserve!\",\n        regStatus: \"👆🏽 Register first to start car sharing!\",\n        address: addressArray[0],\n      };\n      setStatus(obj.status);\n      setRegStatus(obj.regStatus)\n      setWallet(obj.address);\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n  \n};  \n  \nconst connectWalletPressed = async () => {\n await connectWallet().then((response) => {\n  getUserStatus(response.address);\n}, (error) => {\n  /**\n   * Handle error here\n   */\n});;\n};\n\n    return (\n      <div id=\"container\">\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <h1 style={{ paddingTop: \"50px\" }}>Teslo Car Sharing Service</h1>\n        <p id=\"registrationStatus\">{registrationStatus}</p>\n        <p id=\"rentStatus\">{rentStatus}</p>\n        <p>{message}</p>\n      <div> \n        <h3 style={{ paddingTop: \"18px\" }}>User Registration</h3>\n        <h4 style={{ paddingTop: \"18px\" }}>Name:</h4>\n     <input\n        type=\"text\"\n        placeholder=\"e.g. John Wick\"\n        onChange={(e) => setUserName(e.target.value)}\n        value={userName}\n     />\n     <h4 style={{ paddingTop: \"18px\" }}>License:</h4>\n      <input\n        type=\"text\"\n        placeholder=\"e.g. ID12345\"\n        onChange={(e) => setLicense(e.target.value)}\n        value={license}\n      />\n       <p id=\"status\">{regStatus}</p>\n     </div> \n     <button id=\"publish\" style={{ float: \"right\"}} onClick={registerUser}>\n        Register\n     </button>\n\n\n     <div> \n        <h3 style={{ paddingTop: \"18px\"}}>Car Reservation</h3>\n        <h4 style={{ paddingTop: \"18px\"}}>Plate No.:</h4>\n     <input\n        type=\"text\"\n        placeholder=\"e.g. SJW1011E\"\n        onChange={(e) => setPlateNo(e.target.value)}\n        value={plateNo}\n     />\n     <p id=\"status\">{reserveStatus}</p>\n     </div> \n     <button id=\"publish\" style={{ float: \"right\"}} onClick={rentCar}>\n        Reserve\n     </button>\n     <button id=\"publish\" style={{ float: \"right\"}} onClick={unrentCar}>\n        Release\n     </button>\n       <p id=\"status\">{status}</p>\n       \n    </div>\n    );\n  };\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}